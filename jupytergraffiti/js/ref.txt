var regex1 = RegExp('foo*','g');
var str1 = 'table football, foosball';
var array1;

while ((array1 = regex1.exec(str1)) !== null) {
  console.log(`Found ${array1[0]}. Next starts at ${regex1.lastIndex}.`);
  // expected output: "Found foo. Next starts at 9."
  // expected output: "Found foo. Next starts at 19."
}

gh = RegExp('<span class="graffiti-highlight" id="graffiti-([^"]+)">(.*?)</span>','g')
while ((array1 = gh.exec(gg)) !== null) { console.log(array1); }


/*
                if (cell
                  // https://stackoverflow.com/questions/1335252/how-can-i-get-the-dom-element-which-contains-the-current-selection
                  let parentElem, selection, range, ranges, savedRange;
                  if (document.selection) {
                    // IE family
                    selection = document.selection;
                    range = selection.createRange();
                    parentElem = range.parentElement();
                  } else {
                    // Sane browsers
                    ranges = window.getSelection();
                    if (ranges.rangeCount > 0) {
                      parentElem = ranges.getRangeAt(0).startContainer.parentNode;
                      savedRange = ranges.getRangeAt(0).cloneRange();
                    }
                  }
                  const cellDOM = $(parentElem).parents('.cell');
                  let cellId;
                  if (cellDOM.length > 0) {
                    cellId = cellDOM.attr('graffiti-cell-id');
                    if (cellId !== undefined) {
                      const cell = utils.findCellByCellId(cellId);
                      if (cell.cell_type === 'markdown') {
                        console.log('Markdown selection changed:', cellId, ranges);
                setTimeout(() => {
                  if (window.getSelection) {
                    const winSelection = window.getSelection();
                    winSelection.removeAllRanges();
//                    winSelection.addRange(savedRange);
                    console.log('savedRange:', savedRange);
                  } else if (document.selection) {
                    var textRange = document.body.createTextRange();
                    textRange.moveToElementText(element);
                    textRange.select();
                  }
                  
                }, 3000);
              } else {
                if ($(parentElem).parents('.output_area').length > 0) {
                  console.log('Code cell output area selection changed:', cellId, ranges);
                }
              }
            }
          }
        });
*/



"autonomousgpu/view6a0900b6",
  "autonomousgpu/viewHJeftIbWrX",
  "gradedjupyter/labr1x1UMGNQm",
  "jupyter/view0a174b4c",
  "jupyter/view24d3ba7f",
  "jupyter/view305b1af9",
  "jupyter/view3f484599",
  "jupyter/view86e13931",
  "jupyter/viewa8d052f8"
  


https://udacity.zendesk.com/agent/tickets/890416
https://udacity.zendesk.com/agent/tickets/890316
https://udacity.zendesk.com/agent/tickets/890219
https://udacity.zendesk.com/agent/tickets/890251
